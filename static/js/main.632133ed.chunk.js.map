{"version":3,"sources":["components/GlobalState.js","apis/youtubeSearch.js","components/header/SearchBox.js","components/header/SimpleAppBar.js","components/HomePage.js","components/header/SearchResult.js","components/CurrentSection.js","components/player/MusicArt.js","components/player/TimelineController.js","apis/getAudioLink.js","components/player/MainPlayer.js","components/SwipeMenu.js","App.js","serviceWorker.js","index.js","images/google.svg","images/music-bg.svg","images/dottedCircle.svg"],"names":["GlobalContex","createContext","video","id","title","channelTitle","maxThumbnail","hqThumbnail","GlobalState","props","useState","searchState","setSearchState","searchResult","setSearchResult","currentVideoSnippet","setCurrentVideoSnippet","menuOpen","setMenuOpen","useEffect","Provider","value","children","axios","create","baseURL","params","part","videoCategoryId","type","key","SearchBox","useContext","searchQuery","setSearchQuery","ytSearchQuery","setYtSearchQuery","isPoperOpen","setPopper","data","a","youtubeSearch","get","q","res","items","searchYt","popperResult","Grid","style","height","container","justify","alignItems","CircularProgress","IconButton","onClick","color","aria-label","onSubmit","e","preventDefault","target","lastChild","blur","onSearchSubmit","width","InputBase","fullWidth","placeholder","autoFocus","paddingLeft","onChange","Popper","background","open","placement","anchorEl","document","getElementById","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","display","textAlign","breakpoints","up","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","in","SimpleAppBar","classes","setOpenMenu","className","AppBar","position","Toolbar","edge","Typography","variant","noWrap","aria-level","bgStyle","bgImg","backgroundPositionX","marginTop","craftedStyle","fontFamily","fontSize","letterSpacing","HomePage","showLogin","isSearchOpen","Button","src","gIcon","alt","padding","entities","Entities","require","XmlEntities","SearchResult","renderResults","videos","map","snippet","videoId","ListItem","button","decode","sdThumbnail","handleClick","ListItemAvatar","Avatar","thumbnails","high","url","ListItemText","marginLeft","primary","secondary","component","Divider","List","CustomTab","withStyles","bottom","zIndex","indicator","Tabs","CustomTabs","opacity","selected","Tab","CurrentSection","setValue","checkUserSearched","index","onChangeIndex","ind","evt","newValue","indicatorColor","textColor","icon","MusicArt","thumb","content","transform","borderRadius","border","track","rail","Slider","MainPlayer","SwipeMenu","SwipeableDrawer","onClose","onOpen","largeAvatar","margin","ListItemIcon","App","createMuiTheme","palette","pink","typography","useNextVariants","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.632133ed.chunk.js","sourcesContent":["import React,{useState,createContext,useEffect} from 'react';\r\n\r\nexport const GlobalContex = createContext();\r\n// test data\r\nconst video = {\r\n    id:\"Ys7-6_t7OEQ\",\r\n    title:\"Justin Bieber - Beauty And A Beat ft. Nicki Minaj (Official Music Video)\",\r\n    channelTitle:\"JustinBieberVEVO\",\r\n    maxThumbnail:\"https://img.youtube.com/vi/Ys7-6_t7OEQ/maxresdefault.jpg\",\r\n    hqThumbnail: \"https://img.youtube.com/vi/Ys7-6_t7OEQ/hqdefault.jpg\"\r\n}\r\nfunction GlobalState(props) {\r\n\r\n    const [searchState,setSearchState] = useState(\"home\");\r\n    const [searchResult,setSearchResult] = useState(null);\r\n    const [currentVideoSnippet,setCurrentVideoSnippet] = useState({});\r\n    const [menuOpen,setMenuOpen] = useState(false)\r\n    // test\r\n    useEffect(()=>{\r\n        setCurrentVideoSnippet(video)\r\n    },[currentVideoSnippet])\r\n\r\n    return (\r\n        <GlobalContex.Provider \r\n        value={{ searchState,setSearchState,\r\n        searchResult,setSearchResult,\r\n        currentVideoSnippet,setCurrentVideoSnippet,\r\n        menuOpen,setMenuOpen}}>\r\n            {props.children}\r\n        </GlobalContex.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalState\r\n//id\r\n// \r\n// title\r\n// \"Justin Bieber - Beauty And A Beat ft. Nicki Minaj (Official Music Video)\"\r\n// channelTitle\r\n// \"JustinBieberVEVO\"\r\n// maxThumbnail\r\n// \"https://img.youtube.com/vi/Ys7-6_t7OEQ/maxresdefault.jpg\"\r\n// hqThumbnail\r\n// \"https://img.youtube.com/vi/Ys7-6_t7OEQ/hqdefault.jpg\"","import axios from \"axios\";\r\n\r\n// put your api keys in .env file you can get those here - https://developers.google.com/youtube/v3/getting-started\r\n\r\nexport const selectRandomKey = () => {\r\n  const keys = process.env.REACT_APP_YouTube_Keys.split(\" \"); //we are splitting the api keys to make an array\r\n  const random = Math.floor(Math.random() * Math.floor(keys.length)); //this will get a random number\r\n  return keys[random];\r\n};\r\n// https://cors-anywhere.herokuapp.com/\r\n\r\n// create axios object\r\nexport default axios.create({\r\n  baseURL: \"https://cors-anywhere.herokuapp.com/https://www.googleapis.com/youtube/v3\",\r\n  params: {\r\n    part: \"snippet\",\r\n    videoCategoryId: \"10\",\r\n    type: \"video\",\r\n    // maxResults: 25,\r\n    // key: selectRandomKey()\r\n    // key:\"AIzaSyCHhmQByh7jiD45NTShA6kF2KEjk-tZSPw\" //youtube api key\r\n    key:\"AIzaSyBCqukaH8emuZ33VWrD6LmaJI7TFClqutY\" //2nd api key\r\n  }\r\n});\r\n","import React,{useContext,useState,useEffect} from 'react';\r\nimport {InputBase,IconButton,Popper,CircularProgress,Grid} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { GlobalContex } from \"../GlobalState\";\r\n// import suggestSearch from \"../../apis/SuggestSearch\";\r\n// import AutoSearchResult from \"./AutoSearchResult\";\r\nimport youtubeSearch from \"../../apis/youtubeSearch\";\r\n\r\n// let ytValue;\r\n\r\nfunction SearchBox() {\r\n\r\n    const {searchState,setSearchResult,setSearchState} = useContext(GlobalContex);\r\n\r\n    const [searchQuery,setSearchQuery] = useState(\"\");\r\n    // const [autoSearchData,setAutoSearch] = useState(\"\");\r\n    const [ytSearchQuery,setYtSearchQuery] = useState(null);\r\n    // const [ytSearchData,setYtSearch] = useState([]);\r\n    const [isPoperOpen,setPopper] = useState(true);\r\n\r\n    // **get back the selected search data**\r\n    // const onSearchSelect = result =>{\r\n    //     setYtSearchQuery(result);\r\n    //     setSearchQuery(result);\r\n    //     //when user selects then search on youtube\r\n    //     setSearchState(\"searching\");\r\n    // }\r\n\r\n    // const userSearched = () =>{\r\n    //     setYtSearchQuery(searchQuery);\r\n    // }\r\n    const onTyped = e =>{\r\n        setSearchQuery(e.target.value);\r\n        //getAutocomplete();\r\n    }\r\n\r\n    // **get autoComplete data from api**\r\n    // const getAutocomplete = async ()=>{\r\n    //     const res = await suggestSearch.get(\"\",{\r\n    //         params:{\r\n    //             q: searchQuery\r\n    //         }\r\n    //     })\r\n    //     // extract data\r\n    //     const searchSuggestions = [];\r\n    //     res.data.split('[').forEach((ele, index) => {\r\n    //     if (!ele.split('\"')[1] || index === 1) return;\r\n    //         searchSuggestions.push(ele.split('\"')[1]);\r\n    //         setAutoSearch(searchSuggestions);\r\n    //     });\r\n    //     // console.log( autoSearchData)\r\n    // }\r\n    \r\n\r\n    const onSearchSubmit = e =>{\r\n        e.preventDefault();\r\n        e.target.lastChild.lastChild.blur()\r\n        setSearchState(\"searching\");\r\n        setYtSearchQuery(searchQuery);\r\n    }\r\n\r\n    // get youtube search result from api\r\n    useEffect(()=>{\r\n        const searchYt = async data =>{\r\n            const res = await youtubeSearch.get(\"/search\",{\r\n                params:{\r\n                    q:data\r\n                }\r\n            })\r\n            setSearchResult(res.data.items);\r\n            setSearchState(\"completed\");\r\n        }\r\n        // only search if there is any value\r\n        if(ytSearchQuery && ytSearchQuery !== ''){\r\n            searchYt(ytSearchQuery);\r\n        }\r\n    },[ytSearchQuery,setSearchResult,setSearchState]);\r\n\r\n    // show loading icon while we fetch the results from api\r\n    const popperResult = () =>{\r\n        switch(searchState){\r\n            case \"searching\":\r\n                return (\r\n                    <Grid style={{ height:\"100vh\"}} container justify=\"center\" alignItems=\"center\">\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                );\r\n            // case \"clicked\":\r\n            //     return (\r\n            //         <AutoSearchResult results={autoSearchData} onSearchSelect={onSearchSelect} />\r\n            //     );\r\n            case \"completed\":\r\n                setPopper(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <IconButton onClick={()=>setSearchState(\"home\")} color=\"inherit\" aria-label=\"Menu\">\r\n                <ArrowBackIcon />\r\n            </IconButton>\r\n            <form onSubmit={e => onSearchSubmit(e)} style={{ width: \"100%\" }}>\r\n                <InputBase fullWidth placeholder=\"Search...\" autoFocus style={{ color:\"#fff\",paddingLeft:\"16px\"}} value={searchQuery} onChange={onTyped} onClick={()=>{\r\n                    setSearchState(\"clicked\");\r\n                    setPopper(true);\r\n                }}/>\r\n            </form>\r\n            <Popper style={{ width:\"100%\",height:\"100%\",background:\"#fff\"}} open={isPoperOpen} placement=\"bottom\"\r\n            anchorEl={document.getElementById(\"navbar\")}>\r\n               {popperResult}\r\n            </Popper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContex} from '../GlobalState';\r\nimport { makeStyles,AppBar,Toolbar,IconButton,Typography,useScrollTrigger, Slide} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      textAlign:\"center\",\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    \r\n  }));\r\n\r\n  function HideOnScroll (props) {\r\n      const {children} = props;\r\n      const trigger = useScrollTrigger();\r\n      return (\r\n          <Slide appear={false} direction=\"down\" in={!trigger}>\r\n              {children}\r\n          </Slide>\r\n      )\r\n  }\r\n   function SimpleAppBar(props) {\r\n    const classes = useStyles();\r\n    const {searchState,setSearchState,setMenuOpen} = useContext(GlobalContex);\r\n    const setOpenMenu = ()=>{\r\n        setMenuOpen(true)\r\n    }\r\n    const toggleSearch = () =>{\r\n        if(searchState === \"home\"){\r\n            return(\r\n                <>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    className={classes.menuButton}\r\n                    color=\"inherit\"\r\n                    aria-label=\"Menu\"\r\n                    onClick={setOpenMenu}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                Ylight Music\r\n                </Typography>\r\n                \r\n                <IconButton color=\"inherit\" aria-level=\"Search\" onClick={()=> setSearchState(\"clicked\")}>\r\n                    <SearchIcon />\r\n                </IconButton>\r\n                </>\r\n            )\r\n        }else{\r\n            return <SearchBox />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <HideOnScroll {...props}>\r\n                <AppBar position=\"sticky\" id=\"navbar\">\r\n                    <Toolbar>\r\n                    {toggleSearch()}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n        </div>\r\n    )\r\n}\r\n\r\n// export default withStyles(styles)(SimpleAppBar);\r\nexport default SimpleAppBar;\r\n ","import React,{useContext} from 'react'\r\nimport {Button,Grid, Typography} from '@material-ui/core';\r\nimport {GlobalContex} from './GlobalState'\r\nimport bgImg from \"../images/music-bg.svg\";\r\nimport gIcon from \"../images/google.svg\";\r\n\r\nconst bgStyle = {\r\n    background:`url('${bgImg}') no-repeat`,\r\n    backgroundPositionX:'50%',\r\n    marginTop: \"50px\",\r\n    width: \"100vw\",\r\n    height: \"55vh\"\r\n    \r\n}\r\nconst craftedStyle = {\r\n    fontFamily: \"Vibur, cursive\",\r\n    fontSize: \"24px\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 0,\r\n    marginTop: \"40px\"\r\n  };\r\nfunction HomePage() {\r\n    const {isSearchOpen} = useContext(GlobalContex);\r\n    const showLogin = {\r\n        display: isSearchOpen ? \"none\":\"block\"\r\n    }\r\n    return (\r\n        <div style={showLogin}>\r\n            <div style={bgStyle} />\r\n            <Grid container justify=\"center\">\r\n                <Button variant=\"outlined\" color=\"primary\">\r\n                    <img src={gIcon} height=\"25px\" style={{ marginRight:\"px\"}} alt=\"Home\"/>Sign In to Personalize\r\n                </Button>\r\n            </Grid>\r\n            <Typography variant=\"h5\" color=\"primary\" style={{ padding:\"10px\"}}>\r\n            Listen to unilimited songs without any ads for free only on Ylight Music\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"primary\" style={craftedStyle}>\r\n                HandCrafted by Nahid\r\n            </Typography>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React,{useContext} from 'react';\r\nimport {List,ListItem,ListItemText, ListItemAvatar, Avatar, Typography, Divider} from \"@material-ui/core\";\r\nimport { GlobalContex } from '../GlobalState';\r\nconst Entities = require(\"html-entities\").XmlEntities;\r\n\r\nconst entities = new Entities();\r\n\r\nfunction SearchResult({videos}) {\r\n    let renderResults = \"<div>Loading</div>\";\r\n    const {currentVideoSnippet,setCurrentVideoSnippet} =useContext(GlobalContex);\r\n\r\n    const handleClick = video => {\r\n        // set all the info of current clicked video in this object\r\n        setCurrentVideoSnippet({\r\n            id: video.id.videoId,\r\n            title: entities.decode(video.snippet.title),\r\n            channelTitle: entities.decode(video.snippet.channelTitle),\r\n            maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\r\n            sdThumbnail:  `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\r\n        })\r\n    }\r\n    renderResults = videos.map(video =>{\r\n        const {snippet} = video;\r\n        return(\r\n            <div key={video.id.videoId}>\r\n                <ListItem alignItems=\"flex-start\" button onClick={()=>handleClick(video)}>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{ width:\"60px\", height:\"60px\"}}\r\n                        alt={video.snippet.title} src={video.snippet.thumbnails.high.url} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText style={{ marginLeft:\"10px\"}} primary={video.snippet.title} secondary={\r\n                        <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\r\n                            {video.snippet.channelTitle}\r\n                        </Typography>\r\n                    } />\r\n                </ListItem>\r\n                <Divider />\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <List>\r\n            {renderResults}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default SearchResult\r\n","import React,{useContext,useState} from 'react'\r\nimport HomePage from './HomePage';\r\nimport {GlobalContex} from './GlobalState';\r\nimport SearchResult from './header/SearchResult';\r\nimport SwipeableViews from 'react-swipeable-views'\r\nimport {Tabs,Tab,withStyles} from '@material-ui/core'\r\nimport HomeIcon from \"@material-ui/icons/Home\"\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\r\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\"\r\nimport HistoryIcon from \"@material-ui/icons/History\"\r\n\r\nconst CustomTab = withStyles({\r\n    root:{\r\n        background:\"#e91e663\",\r\n        position:\"fixed\",\r\n        bottom:\"0\",\r\n        width:\"100%\",\r\n        zIndex:\"1300\"\r\n    },\r\n    indicator:{\r\n        display:\"none\"\r\n    }\r\n})(Tabs)\r\nconst CustomTabs = withStyles({\r\n    root: {\r\n        color: \"#FFB2C1\",\r\n        \"&:hover\": {\r\n          color: \"#ffffffed\",\r\n          opacity: 1\r\n        },\r\n        \"&$selected\": {\r\n          color: \"#fff\"\r\n        },\r\n        \"&:focus\": {\r\n          color: \"#FFFFFF\"\r\n        }\r\n      },\r\n      selected: {}\r\n})(Tab)\r\n\r\nfunction CurrentSection() {\r\n    const {searchState,searchResult} = useContext(GlobalContex);\r\n    const [value,setValue] = useState(0)\r\n\r\n    function handleChange(evt,newValue){\r\n        setValue(newValue)\r\n    }\r\n    function handleChangeIndex(ind){\r\n        setValue(ind)\r\n    }\r\n    function checkUserSearched(){\r\n        if(searchState === 'completed'){\r\n            return <SearchResult videos={searchResult} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {checkUserSearched()}\r\n            <SwipeableViews index = {value} onChangeIndex={handleChangeIndex}>\r\n                <div>\r\n                    <HomePage />\r\n                </div>\r\n                <div>\r\n                    This is not your home\r\n                </div>\r\n                <div>\r\n                   History \r\n                </div>\r\n            </SwipeableViews>\r\n            <CustomTab value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" variant=\"fullWidth\">\r\n                <CustomTabs icon={<HomeIcon />} aria-label=\"Home\" />\r\n                <CustomTabs icon={<FavoriteIcon />} aria-label=\"Favorite\" />\r\n                <CustomTabs icon={<HistoryIcon />} aria-label=\"History\" />\r\n            </CustomTab>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default CurrentSection\r\n","import React from 'react'\r\nimport {Avatar,Grid,Typography} from '@material-ui/core'\r\nimport circleSvg from '../../images/dottedCircle.svg'\r\n\r\nfunction MusicArt({data}) {\r\n    const bgStyle = {\r\n        background:`url(${circleSvg} no-repeat)`,\r\n        padding:\"18px\"\r\n    }\r\n    const ckImg = e => {\r\n        if(e.target.naturalWidth < 400){\r\n            e.target.src = data.hqThumbnail\r\n        }\r\n    }\r\n    const likeSong = ()=>{\r\n        console.log(data.id)\r\n    }\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" onDoubleClikCapture={likeSong}>\r\n            <div style={bgStyle}>\r\n                <Avatar className=\"searchThumb\" style={{ width:\"215px\",height:\"215px\",boxShadow:\"#0000008c 1px 3px 8px\"}} alt=\"videoThumbnail\" src={data.maxThumbnail} imgProps={{ onLoad: e => ckImg(e)}}>\r\n                </Avatar>\r\n            </div>\r\n            <br/>\r\n            <Typography color=\"primary\" variant=\"h5\">\r\n                {data.title.slice(0,20)+'...'}\r\n            </Typography>\r\n            <Typography color=\"primary\" variant=\"subtitle1\">\r\n                {data.channelTitle}\r\n            </Typography>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default MusicArt\r\n  ","import React,{useState} from 'react'\r\nimport {withStyles,Typography,Grid,Slider} from '@material-ui/core'\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled'\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        height: 6\r\n      },\r\n    thumb: {\r\n        height: 16,\r\n        width: 16,\r\n        marginTop: -5.3,\r\n        marginLeft: -8,\r\n        \"&::before\": {\r\n          content: \"''\",\r\n          height: \"inherit\",\r\n          width: \"inherit\",\r\n          position: \"absolute\",\r\n          transform: \"scale(1.6)\",\r\n          borderRadius: \"50px\",\r\n          border: \"1px solid\"\r\n        }\r\n      },\r\n    track: {\r\n        height: 6,\r\n        borderRadius: 4\r\n      },\r\n    rail: {\r\n        height: 6,\r\n        borderRadius: 4\r\n      }\r\n})(Slider);\r\nconst MiniSlider = withStyles({\r\n    root: {\r\n      height: 4,\r\n      position: \"relative\",\r\n      bottom: \"-6px\",\r\n      color: \"#FFFDFD\",\r\n      padding: 0\r\n    },\r\n    thumb: {\r\n      display: \"none\"\r\n    },\r\n    track: {\r\n      height: 4,\r\n      borderRadius: 0\r\n    },\r\n    rail: {\r\n      height: 4,\r\n      borderRadius: 0\r\n    }\r\n  })(Slider);\r\n\r\nconst formatTime = sec =>{\r\n    let min = Math.floor(sec/60)\r\n    let secnd = Math.ceil(sec-min*60)\r\n\r\n    if(secnd < 10) \r\n        secnd = `0${secnd}`\r\n    \r\n    return `${min}:${secnd}`\r\n}\r\nfunction TimelineController({currentTime,player,minimized}) {\r\n    const [value, setValue] = useState(50);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    player.currentTime = newValue;\r\n  };\r\n\r\n  const showDuration = () => {\r\n    if (player) {\r\n      if (player.duration) {\r\n        return formatTime(player.duration);\r\n      } else {\r\n        return \"0:00\";\r\n      }\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  if (minimized) {\r\n    return (\r\n      <MiniSlider\r\n          value={currentTime}\r\n          max={player ? player.duration : 0}\r\n        />\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ margin: \"0 20px\" }}>\r\n        <Grid container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant=\"body1\" color=\"primary\">\r\n            {formatTime(currentTime)}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"primary\">\r\n            {showDuration()}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <PrettoSlider\r\n          value={currentTime}\r\n          onChange={handleChange}\r\n          max={player ? player.duration : 0}\r\n        />\r\n\r\n      </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default TimelineController\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL:\"http://localhost:8800\",\r\n})","import React,{useEffect,useContext,useState,useRef} from 'react'\r\nimport {GlobalContex} from '../GlobalState';\r\nimport {Grid} from \"@material-ui/core\"\r\nimport {useSwipeable,Swipeable} from 'react-swipeable'\r\nimport Youtube from \"react-youtube\";\r\nimport PlayPauseButton from \"./PlayPauseButton\";\r\nimport NextButton from \"./NextButton\";\r\nimport PreviousButton from \"./PreviousButton\";\r\nimport MusicArt from \"./MusicArt\";\r\nimport TimelineController from \"./TimelineController\";\r\nimport VolumeController from \"./VolumeController\";\r\nimport getAudioLink from \"../../apis/getAudioLink\";\r\n\r\nfunction MainPlayer() {\r\n    const {currentVideoSnippet,setCurrentVideoSnippet} = useContext(GlobalContex)\r\n    // const [player,setPlayer] = useState(null);\r\n    const [audioState,setAudioState] = useState(null)\r\n    const [currentTime,setCurrentTime] = useState(0)\r\n    const [playerState,setPlayerState] = useState(null)\r\n    const [minimized, setMinimized] = useState(true)\r\n\r\n    const body = document.querySelector(\"body\")\r\n    const audioPlayer = useRef()\r\n    const player = audioPlayer.current;\r\n\r\n    useEffect(()=>{\r\n        const getAudio = async data => {\r\n            audioPlayer.current.src=\"\"\r\n\r\n            setPlayerState(\"maximized\")\r\n            setAudioState(\"loading\")\r\n            const res = await getAudioLink.get('/song',{\r\n                params:{id:data}\r\n            })\r\n            audioPlayer.current.src = res.data\r\n            audioPlayer.current.load()\r\n        }\r\n        if(currentVideoSnippet.id){\r\n            getAudio(currentVideoSnippet.id)\r\n        }\r\n    },[currentVideoSnippet.id])\r\n\r\n    useEffect(()=> {},[playerState])\r\n\r\n\r\n\r\n    const opts = {\r\n        height:\"100%\",\r\n        width:\"100%\",\r\n        playerBars:{\r\n            autoplay:1\r\n        }\r\n    }\r\n    const playerStyle = {\r\n        position:\"fixed\",\r\n        bottom:0,\r\n        right:0,\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        opacity: \".5\",\r\n        paddingTop:\"50px\",\r\n        display:\"none\",\r\n        background:\"#fff\",\r\n        zIndex:\"1400\",\r\n        display:\"inline block\",\r\n        overflow:\"hidden\",\r\n        transition:\"all .3s ease\"\r\n    }\r\n    // const onReady = e => {\r\n    //     setPlayer(e.target)\r\n    // // e.target.loadVideoById(\"M7lc1UVf-VE\")\r\n    // }\r\n    if(playerState === 'minimized'){\r\n        // playerStyle.height = \"100px\"\r\n        playerStyle.transform = \"translateY(80%)\"\r\n        playerStyle.background = \"#e91e63\"\r\n        // playerStyle.top = \"calc(100vh-148px)\"\r\n        playerStyle.zIndex = 0\r\n        body.style.overflow=\"auto\"\r\n    }\r\n    if(playerState === 'maximized'){\r\n        body.style.overflow=\"hidden\"\r\n    }\r\n    const expandPlayer = ()=>{\r\n        if(playerState == 'minimized'){\r\n            setPlayerState(\"maximized\")\r\n            setMinimized(true)\r\n        }\r\n    }\r\n    const timeUpdate = () =>{\r\n        setCurrentTime(audioPlayer.current.currentTime)\r\n    }\r\n    const swipeHandler = useSwipeable({\r\n        onSwipedDown: e => {\r\n            setPlayerState(\"minimized\")\r\n            console.log(\"player swipped down\")\r\n        }\r\n    })\r\n    const returnMaximizedPlayer = () =>{\r\n        if(playerState === 'maximized'){\r\n            return (\r\n                <>\r\n                    <VolumeController player ={player} setPlayerState={setPlayerState} />\r\n                    <MusicArt data= {currentVideoSnippet} />\r\n                    <TimelineController currentTime = {currentTime} player={player} />\r\n                    <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" >\r\n                        <PreviousButton />\r\n                        <PlayPauseButton player={player} audioState={audioState} />\r\n                        <NextButton />\r\n                    </Grid>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    const returnMinimizedPlayer = () =>{\r\n        if(playerState === 'minimized'){\r\n            return (\r\n                <>\r\n                    <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" >\r\n                        <PreviousButton />\r\n                        <PlayPauseButton player={player} audioState={audioState} />\r\n                        <NextButton />\r\n                    </Grid>\r\n                    <TimelineController currentTime = {currentTime} player={player} minimized={minimized}/>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    if(currentVideoSnippet.id){\r\n    return (\r\n        <div style={playerStyle} onClick={expandPlayer} {...swipeHandler} >\r\n            {/* <Youtube opts={opts} onReady={onReady} /> */}\r\n            {returnMaximizedPlayer()}\r\n            {returnMinimizedPlayer()}\r\n            <audio src=\"\" onTimeUpdate={timeUpdate} onLoadStart={()=> setAudioState(\"loading\")} onPlay={()=>setAudioState(\"playing\")} onPause={()=>setAudioState(\"paused\")} autoPlay ref={audioPlayer}  />\r\n        </div>\r\n    )\r\n    }else{\r\n        return <div>No Music  </div>\r\n    }\r\n}\r\n\r\nexport default MainPlayer\r\n","import React,{useState,useContext} from 'react'\r\nimport {SwipeableDrawer,Avatar,Divider,Button,List,ListItem,ListItemIcon,ListItemText,withStyles} from '@material-ui/core'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport FeedbackIcon from '@material-ui/icons/Feedback'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport gIcon from '../images/google.svg'\r\nimport { GlobalContex } from './GlobalState'\r\n\r\n\r\nfunction SwipeMenu() {\r\n    const largeAvatar = {\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n        margin: \"25px 0\",\r\n        background: \"#e91e63\"\r\n    }\r\n    const openPrivacy = ()=>{\r\n        window.open('./privacy')\r\n    }\r\n    const {menuOpen,setMenuOpen} = useContext(GlobalContex)\r\n\r\n    return (\r\n        <SwipeableDrawer open={menuOpen} onClose={()=>setMenuOpen(false)} onOpen={()=>setMenuOpen(true)}>\r\n            <div style={{width:\"300px\"}}>\r\n                <div style={{ padding:\"15px\"}}>\r\n                    <Avatar style={{ largeAvatar}} >\r\n                        <AccountCircleIcon fontSize=\"large\"/>\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                            <img src={gIcon} height=\"25px\" alt=\"test sign\"/>Sign In\r\n                        </Button>\r\n                    </Avatar>\r\n                </div>\r\n                <Divider />\r\n                <List component=\"nav\" className={\"pinkLists\"}>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <FeedbackIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Feedback\" />\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon>\r\n                            <InfoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Privacy & Policy\" />\r\n                    </ListItem>\r\n                </List>\r\n            </div>\r\n        </SwipeableDrawer>\r\n    )\r\n}\r\n\r\nexport default SwipeMenu\r\n","import React from 'react';\nimport './App.css';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { pink,green } from \"@material-ui/core/colors\";\nimport GlobalState from './components/GlobalState'\nimport SimpleAppBar from './components/header/SimpleAppBar';\nimport CurrentSection from './components/CurrentSection';\nimport MainPlayer from './components/player/MainPlayer';\nimport SwipeMenu from './components/SwipeMenu'\n\nfunction App() {\n  const theme = createMuiTheme({\n\t  palette:{\n\t\t  primary:pink\n\t  },\n\t  typography:{\n\t\t  useNextVariants:true\n\t  }\n  })\n  return (\n    <GlobalState>\n    <MuiThemeProvider theme={theme}>\n      <SimpleAppBar />\n      <CurrentSection />\n      {/* <MainPlayer /> */}\n      <SwipeMenu />\n      </MuiThemeProvider>\n    </GlobalState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/google.8fb2bc7a.svg\";","module.exports = __webpack_public_path__ + \"static/media/music-bg.2a54ea04.svg\";","module.exports = __webpack_public_path__ + \"static/media/dottedCircle.c96ca893.svg\";"],"sourceRoot":""}